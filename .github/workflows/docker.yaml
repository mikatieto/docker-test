name: Workflow atelier 1 # Le nom de la chaine CI/CD (workflow)
# Controle de la chaine CI/CD
on:
  # Lance la chaine CI/CD lorsque un `git push` est effectué sur les branches indiquées
  push:
jobs:
  # Chaque tache (job) est représentée par un serveur, ce qui permet l'indépendance des étapes a executer.
  build-test-upload: # L'identifiant du job
    runs-on: ubuntu-latest # Choix de l'OS du job
    env: 
      DOCKER_LOGIN: michaelmora
    steps: # Sections des étapes à effectuer au sein du job
      # actions/checkout@v3 permet de télécharger votre repository github au sein du job
      # En interne, il effectue un `git clone` de votre projet puis un `git checkout`
      # au sein de la branche qui a déclenché l'evenement `push`
      - name: "[CI] Build l'environnement en récupérant le repo entier de votre branche."
        uses: actions/checkout@v3 
      - name: "Docker login"
        uses: docker/login-action@v2
        with:
          username: ${DOCKER_LOGIN}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      # Une fois votre répertoire récupérer, vous pouvez effectuer un `ls -l` pour
      # lister et verifier que votre repository github est bien téléchargé
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: user/atelier1:latest
          
